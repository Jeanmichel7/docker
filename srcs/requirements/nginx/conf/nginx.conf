server {
    listen      443 ssl;
    server_name jrasser.42.fr www.jrasser.42.fr;
    root    /var/www/html;
    index index.php;
    ssl_certificate     /etc/nginx/ssl/jrasser.42.fr.crt;
    ssl_certificate_key /etc/nginx/ssl/jrasser.42.fr.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_session_timeout 10m;
    keepalive_timeout 70;
    location / {
        try_files $uri /index.php?$args;
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache';
        if_modified_since off;
        expires off;
        etag off;
    }
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}

# server {
#         listen 443 ssl;
#         server_name localhost;

#         ssl_certificate /etc/nginx/ssl/certificate.crt;
#         ssl_certificate_key /etc/nginx/ssl/certificate_key.pem;

#         ssl_protocols TLSv1.2 TLSv1.3;
#         # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#         # ssl_prefer_server_ciphers on;

#         location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#         }
#     }
    
server {
  listen 80;
#   listen [::]:80;
  access_log off;
  root /var/www/vitrine;
  index index.html;
  server_name ft_inception;
  server_tokens off;
  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ /index.php?$args;
  }
  # pass the PHP scripts to FastCGI server listening on wordpress:9000
  location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass wordpress:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param SCRIPT_NAME $fastcgi_script_name;
  }
}
# # nginx.conf
# # worker_processes  1;

# events {
#     worker_connections  1024;
# }

# http {
#   server {
#         listen 80 default_server;
#         listen [::]:80 default_server;

#         # Configuration de la redirection vers HTTPS
#         return 301 https://$host$request_uri;
#     }
# }

# https {
#   # Configuration des écoutes
#     server {
#         listen 443 ssl;
#         server_name localhost;

#         ssl_certificate /etc/nginx/ssl/certificate.crt;
#         ssl_certificate_key /etc/nginx/ssl/certificate_key.pem;

#         ssl_protocols TLSv1.2 TLSv1.3;
#         # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#         # ssl_prefer_server_ciphers on;

#         location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#         }
#     }
# }



# # Configuration générale du serveur
# worker_processes 1;
# events { worker_connections 1024; }

# Configuration du serveur HTTP
# http {
#     # Configuration des écoutes
#     server {
#         listen 80 default_server;
#         listen [::]:80 default_server;

#         # Configuration de la redirection vers HTTPS
#         return 301 https://$host$request_uri;
#     }

#     # Configuration du serveur HTTPS
#     server {
#         listen 443 ssl;
#         listen [::]:443 ssl;

#         # Configuration du certificat SSL
#         ssl_certificate /path/to/certificate.pem;
#         ssl_certificate_key /path/to/certificate_key.pem;

#         # Configuration de la version de TLS
#         ssl_protocols TLSv1.2 TLSv1.3;

#         # Configuration du contenu du serveur
#         location / {
#             root /var/www/html;
#             index index.html;
#         }
#     }
# }
# server {
#   listen 80;
#   listen [::]:80;
#   access_log off;
#   root /var/www/html;
#   index index.php;
#   server_name ft_inception;
#   server_tokens off;
#   location / {
#     # First attempt to serve request as file, then
#     # as directory, then fall back to displaying a 404.
#     try_files $uri $uri/ /index.php?$args;
#   }
#   # pass the PHP scripts to FastCGI server listening on wordpress:9000
#   location ~ \.php$ {
#     fastcgi_split_path_info ^(.+\.php)(/.+)$;
#     fastcgi_pass wordpress:9000;
#     fastcgi_index index.php;
#     include fastcgi_params;
#     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#     fastcgi_param SCRIPT_NAME $fastcgi_script_name;
#   }
# }
# # user  nginx;
# # worker_processes  auto;

# # error_log  /var/log/nginx/error.log notice;
# # pid        /var/run/nginx.pid;


# # events {
# #     worker_connections  1024;
# # }


# # http {
# #     include       /etc/nginx/mime.types;
# #     default_type  application/octet-stream;

# #     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
# #                       '$status $body_bytes_sent "$http_referer" '
# #                       '"$http_user_agent" "$http_x_forwarded_for"';

# #     access_log  /var/log/nginx/access.log  main;

# #     sendfile        on;
# #     #tcp_nopush     on;

# #     keepalive_timeout  65;

# #     #gzip  on;

# #     include /etc/nginx/conf.d/*.conf;


# #     server_tokens off; 
# # }








# ################# old ####################
# # /etc/nginx/nginx.conf

# #user www-data;
# #worker_processes auto;
# #pid /run/nginx.pid;
# #include /etc/nginx/*.conf;
# #
# #events {
# #    worker_connections 768;
# #    # multi_accept on;                                                                                                                                                                                                                   
# #}
# #
# #http {
# #
# #    ##                                                                                                                                                                                                                                   
# #    # Basic Settings                                                                                                                                                                                                                     
# #    ##                                                                                                                                                                                                                                   
# #
# #    sendfile on;
# #    tcp_nopush on;
# #    tcp_nodelay on;
# #    keepalive_timeout 65;
# #    types_hash_max_size 2048;
# #    server_tokens off;                                                                                                                                                                                                                 
# #
# #    # server_names_hash_bucket_size 64;                                                                                                                                                                                                  
# #    # server_name_in_redirect off;                                                                                                                                                                                                       
# #
# #    include /etc/nginx/mime.types;
# #    default_type application/octet-stream;
# #
# #}